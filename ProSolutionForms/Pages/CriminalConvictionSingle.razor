@page "/CriminalConvictionSingle"
@page "/CriminalConvictionSingle/{StudentGUID}"

@using ProSolutionForms.Models
@using System.Net
@inject HttpClient Http
@inject IConfiguration configuration
@inject NavigationManager NavManager
@inject ILogger<CriminalConviction> Logger

<PageTitle>Criminal Conviction Form</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md text-center">
            <img class="img-fluid CollegeLogo" src="/images/SHCG-Logo-Coloured-RGB.png" title="SHCG Logo" />
        </div>
    </div>
</div>

<div class="bd-callout bd-callout-SHCG-blue bd-callout-grey">
    <div class="container">
        <div class="row">
            <div class="col-md text-center">
                <h3 class="mt-3 mb-3"><i class="fa-solid fa-handcuffs"></i> Criminal Conviction Form</h3>
            </div>
        </div>
    </div>

    @if (loadDataErrorMsg != null) 
    {
        <div class="container">
            <div class="row">
                <div class="col-md">
                    <div class="alert alert-danger hstack gap-3" role="alert">
                        <div>
                            <h1><i class="fa-solid fa-triangle-exclamation"></i></h1>
                        </div>
                        <div>
                            <p>
                                @loadDataErrorMsg
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (formSubmitted == true)
    {
        <div class="container">
            <div class="row">
                <div class="col-md">
                    <div class="alert alert-success hstack gap-3" role="alert">
                        <div class="ms-auto me-3">
                            <h1><i class="fa-solid fa-clipboard-check"></i></h1>
                        </div>
                        <div class="me-auto">
                            <h4 class="alert-heading">Criminal Convictions Successfully Submitted</h4>
                            <hr>
                            <p>
                                Thank you for declaring your Criminal Convictions.
                            </p>
                            <p>
                                We will be in touch with you soon to discuss the next steps.
                            </p>
                        </div>
                    </div>
                    <div class="alert alert-secondary" role="alert">
                        <div class="row">
                            <div class="col-md text-end">
                                <button type="button" class="btn btn-success" @onclick="GoToSHCGHomepage"><i class="fa-solid fa-arrow-up-right-from-square"></i> Go To The SHCG Website</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if(student == null) {
        <div class="container">
            <div class="row">
                <div class="col-md">
                    <div class="alert alert-primary text-center" role="alert">
                        <h1>
                            <i class="fa-solid fa-spinner fa-spin"></i> Loading ...
                        </h1>
                    </div>
                </div>
            </div>
        </div>
    }
    else {
        <div class="bd-callout bd-callout-SHCG-yellow bd-callout-grey">
            <div class="container">
                <div class="row mb-3 align-items-center">
                    <div class="col-md-4">
                        <i class="fa-solid fa-user"></i> Name
                    </div>
                    <div class="col-md-8">
                        @student?.Forename @student?.Surname
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <i class="fa-solid fa-graduation-cap"></i> Course
                    </div>
                    <div class="col-md-8">
                        Course Here
                    </div>
                </div>
            </div>
        </div>

        <EditForm FormName="CriminalConviction" Model="criminalConviction" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="bd-callout bd-callout-SHCG-teal bd-callout-grey">
                <div class="container">
                    <div class="row">
                        <div class="col-md">
                        
                            <div class="row g-3 mb-3 align-items-center">
                                <div class="col-md-4">
                                    <i class="fa-regular fa-calendar-days"></i> <label class="col-form-label">Date of Offence</label>
                                </div>
                                <div class="col-md-8">
                                    <InputDate @bind-Value="criminalConviction!.DateOfOffence" class="form-control" />
                                    <ValidationMessage For="@(() => criminalConviction!.DateOfOffence)" />
                                </div>
                            </div>

                            <div class="row g-3 mb-3 align-items-center">
                                <div class="col-md-4">
                                    <i class="fa-solid fa-handcuffs"></i> <label class="col-form-label">Offence</label>
                                </div>
                                <div class="col-md-8">
                                    <InputTextArea @bind-Value="criminalConviction!.Offence" class="form-control" />
                                    <ValidationMessage For="@(() => criminalConviction!.Offence)" />
                                </div>
                            </div>

                            <div class="row g-3 mb-3 align-items-center">
                                <div class="col-md-4">
                                    <i class="fa-solid fa-book"></i> <label class="col-form-label">Penalty</label>
                                </div>
                                <div class="col-md-8">
                                    <InputTextArea @bind-Value="criminalConviction!.Penalty" class="form-control" />
                                    <ValidationMessage For="@(() => criminalConviction!.Penalty)" />
                                </div>
                            </div>

                            <div class="row g-3 mb-3 align-items-center">
                                <div class="col-md-4">
                                    <i class="fa-solid fa-comment"></i> <label class="col-form-label">Comments</label>
                                </div>
                                <div class="col-md-8">
                                    <InputTextArea @bind-Value="criminalConviction!.Comments" class="form-control" />
                                    <ValidationMessage For="@(() => criminalConviction!.Comments)" />
                                </div>
                            </div>

                            <div class="row g-3 mb-3 align-items-center">
                                <div class="col-md-4">
                                    <i class="fa-solid fa-id-card-clip"></i> <label class="col-form-label">Contact Name</label>
                                </div>
                                <div class="col-md-8">
                                    <InputText @bind-Value="criminalConviction!.ContactName" class="form-control" />
                                    <ValidationMessage For="@(() => criminalConviction!.ContactName)" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="alert alert-secondary" role="alert">
                <div class="row">
                    <div class="col-md">
                        <div class="row g-3 justify-content-md-center">
                            <div class="col-md-auto">
                                <button type="submit" class="btn btn-success"><i class="fa-solid fa-paper-plane"></i> Submit</button>
                            </div>
                            <div class="col-md-auto">
                                <button type="reset" class="btn btn-warning"><i class="fa-solid fa-eraser"></i> Clear</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter]
    public string? StudentGUID { get; set; }

    bool formSubmitted = false;

    [SupplyParameterFromForm]
    public CriminalConvictionModel? criminalConviction { get; set; }

    public string? loadDataErrorMsg = null;

    private StudentModel? student;
    private string? studentEndPoint;
    protected override async Task OnInitializedAsync()
    {
        criminalConviction ??= new();

        studentEndPoint = $"{configuration["APIEndpoint"]}/Student/{StudentGUID}";
        try {
            student = await Http.GetFromJsonAsync<StudentModel>(studentEndPoint);
        }
        catch (HttpRequestException ex)
        {
            if (ex.Message.Contains(HttpStatusCode.Unauthorized.ToString()))
            {
                loadDataErrorMsg = $"You are not authorised to view this page";
            }
            else if (ex.Message.Contains("404 (Not Found)"))
            {
                loadDataErrorMsg = $"The GUID \"{StudentGUID}\" does not exist";
            }
            else if (ex.Message.Contains("400 (Bad Request)"))
            {
                loadDataErrorMsg = $"The GUID \"{StudentGUID}\" does not exist";
            }
            else loadDataErrorMsg = $"Error: {ex.Message}";
        }
    }

    private string? formEndPoint;
    public string? formDataErrorMsg = null;
    private async Task SubmitForm()
    {
        formSubmitted = true;
        Logger.LogInformation("Id = {Id}", criminalConviction?.CriminalConvictionID);

        formEndPoint = $"{configuration["APIEndpoint"]}/CriminalConviction";
        try
        {
            if (criminalConviction != null) {
                HttpResponseMessage formResponse = await Http.PostAsJsonAsync<CriminalConvictionModel>(formEndPoint, criminalConviction);
            }
            else
            {
                formDataErrorMsg = "The form could not be submitted as the form values could not be read";
            }

        }
        catch (HttpRequestException ex)
        {
            if (ex.Message.Contains(HttpStatusCode.Unauthorized.ToString()))
            {
                loadDataErrorMsg = $"You are not authorised to view this page";
            }
            else if (ex.Message.Contains("404 (Not Found)"))
            {
                loadDataErrorMsg = $"The GUID \"{StudentGUID}\" does not exist";
            }
            else if (ex.Message.Contains("400 (Bad Request)"))
            {
                loadDataErrorMsg = $"The GUID \"{StudentGUID}\" does not exist";
            }
            else loadDataErrorMsg = $"Error: {ex.Message}";
        }
    }

    private void GoToSHCGHomepage() {
        NavManager.NavigateTo("https://www.shcg.ac.uk");
    }
}
